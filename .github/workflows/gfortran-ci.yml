name: Fortran CI

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest] #, windows-latest]
                gcc_v: [9, 10] # Version of GFortran we want to use.
                
        env:
            FC: gfortran-${{ matrix.gcc_v }}
            GCC_V: ${{ matrix.gcc_v }}
            HOMEBREW_NO_ANALYTICS: "ON" # Make Homebrew installation a little quicker
            HOMEBREW_NO_AUTO_UPDATE: "ON"
            HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK: "ON"
            HOMEBREW_NO_GITHUB_API: "ON"
            HOMEBREW_NO_INSTALL_CLEANUP: "ON"
            
        steps:
        - uses: actions/checkout@v2
            
        - name: Install GFortran macOS
          if: contains(matrix.os, 'macos')
          run: brew install gcc@${GCC_V} || brew upgrade gcc@${GCC_V} || true
        
        #- name: Install GFortran windows
        #  if: contains(matrix.os, 'win')
        #  run: |
        #      choco install mingw wget
        #      wget https://icl.cs.utk.edu/lapack-for-windows/libraries/VisualStudio/3.7.0/Dynamic-MINGW/Win64/liblapack.dll
        #      wget https://icl.cs.utk.edu/lapack-for-windows/libraries/VisualStudio/3.7.0/Dynamic-MINGW/Win64/liblapack.lib

        # Debugging session
        #- name: Setup tmate session
        #  uses: mxschmitt/action-tmate@v3

        #- name: Run windows build
        #  if: contains(matrix.os, 'win')
        #  run: |
        #      FC=gfortran.exe
        #      cd SourceCode
        #      make.exe
            
        - name: Version test
          if: contains(matrix.os, 'macos') || contains(matrix.os, 'ubuntu')
          run: |
              $FC --version
            
        - name: make
          if: contains(matrix.os, 'macos') || contains(matrix.os, 'ubuntu')
          run: |
              cd SourceCode
              make
              cd ..
            
        - name: Compile test
          if: contains(matrix.os, 'macos') || contains(matrix.os, 'ubuntu')
          run: |
              cd Compiling
              ../SourceCode/hams
              cd ..
            
        #- name: Compile test windows
        #  if: contains(matrix.os, 'win')
        #  run: |
        #      cd Compiling
        #      ..\SourceCode\hams.exe
        #      cd ..
              
        - name: CertTest Cylinder
          if: contains(matrix.os, 'macos') || contains(matrix.os, 'ubuntu')
          run: |
              cd CertTest
              cd Cylinder
              ../../SourceCode/hams
              cd ../..
              
        - name: CertTest DeepCwind
          if: contains(matrix.os, 'macos') || contains(matrix.os, 'ubuntu')
          run: |
              cd CertTest
              cd DeepCwind
              ../../SourceCode/hams
              cd ../..
              
        #- name: CertTest HywindSpar
        #  if: contains(matrix.os, 'macos') || contains(matrix.os, 'ubuntu')
        #  run: |
        #      cd CertTest
        #      cd HywindSpar
        #      ../../SourceCode/hams
        #      cd ../..
              
        #- name: CertTest Moonpool
        #  if: contains(matrix.os, 'macos') || contains(matrix.os, 'ubuntu')
        #  run: |
        #      cd CertTest
        #      cd Moonpool
        #      ../../SourceCode/hams
        #      cd ../..


